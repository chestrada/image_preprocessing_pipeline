function [] = deconvolve(input, dxy, dz, numit, lambda_ex, lambda_em, ...
                        cache_drive_path, na, rf, fcyl, slitwidth, ...
                        lambda_damping, clipval, stop_criterion, ...
                        block_size_max, gpu_indices, signal_amp, ...
                        sigma, filter_size, denoise_strength, ...
                        resume_flag, start_block, flip_output, ...
                        convert_to_8bit, output_path)

    disp('deconvolve:');
    calledAs = "deconvolve(input=" + input + ", dxy=" + dxy + ...
        ", dz=" + dz + ", numit=" + numit + ", lambda_ex=" + lambda_ex + ...
        ", lambda_em=" + lambda_em + ", cache_drive_path=" + cache_drive_path + ...
        ", na=" + na + ", rf=" + rf + ", fcyl=" + fcyl + ", slitwidth=" + slitwidth + ...
        ", lambda_damping=" + lambda_damping + ", clipval=" + clipval + ...
        ", stop_criterion=" + stop_criterion + ", block_size_max=" + block_size_max + ...
        ", gpu_indices=[...], signal_amp=" + signal_amp + ", sigma=[...], filter_size=[...], " + ...
        "denoise_strength=" + denoise_strength + ", resume_flag=" + resume_flag + ...
        ", start_block=" + start_block + ", flip_output=" + flip_output + ...
        ", convert_to_8bit=" + convert_to_8bit + ", output_path=" + output_path + ")";
    disp("Called as:");
    disp(calledAs);

    LsDeconv( ...
        convertCharsToStrings(input), ...
        str2double(dxy), ...
        str2double(dz), ...
        str2double(numit), ...
        str2double(na), ...
        str2double(rf), ...
        str2double(lambda_ex), ...
        str2double(lambda_em), ...
        str2double(fcyl), ...
        str2double(slitwidth), ...
        str2double(lambda_damping), ...
        str2double(clipval), ...
        str2double(stop_criterion), ...
        str2double(block_size_max), ...
        gpu_indices, ...
        str2double(signal_amp), ...
        str2num(sigma), ...
        str2num(filter_size), ...
        str2double(denoise_strength), ...
        str2double(resume_flag), ...
        str2double(start_block), ...
        str2double(flip_output), ...
        str2double(convert_to_8bit), ...
        convertCharsToStrings(output_path) ...
    );
end
